setwd('/Users/ivanliu/Google Drive/otto/Otto-Group-Product-Classification-Challenge');
rm(list=ls());gc()
require(caret);require(methods);require(xgboost)
install.packages('xgboost')
devtools::install_github('dmlc/xgboost',subdir='R-package')
install.packages('devtools')
devtools::install_github('dmlc/xgboost',subdir='R-package')
require(caret);require(methods);require(xgboost)
source('main_R/2_logloss_func.R');load(file='data/target.RData');load(file='data/raw_data_newFeat.RData')
trainIndex <- createDataPartition(train$target, p = .7,list = FALSE)
train_df <- train[trainIndex,];test_df  <- train[-trainIndex,]
train_df <- shuffle(train_df) #<<============#
train = train_df[,-which(names(train) %in% c("id"))] #train
test = test_df[,-which(names(test) %in% c("id"))] #test
y = train[,'target']
y = gsub('Class_','',y)
y = as.integer(y)-1 #xgboost take features in [0,numOfClass)
x = rbind(train[,-which(names(train) %in% c("target"))],test[,-which(names(test) %in% c("target"))])#[,-which(names(test) %in% c("target"))])
x = as.matrix(x)
x = matrix(as.numeric(x),nrow(x),ncol(x))
trind = 1:length(y)
teind = (nrow(train)+1):nrow(x)
dtrain <- x[trind,]
dtest <- data.matrix(x[teind,])
param <- list("objective" = "multi:softprob",
"eval_metric" = "mlogloss",
"nthread" = 2, set.seed = 168, eta=0.05, gamma = 0.05, #<<============#
"num_class" = 9, max.depth=8, min_child_weight=4,
subsample=0.8, colsample_bytree = 0.9)
cv.nround = 668
set.seed(168) #<<============#
bst = xgboost(param=param, data = dtrain, label = y, nround = cv.nround)
pred = predict(bst,dtest)#, ntreelimit=1
pred = matrix(pred,9,length(pred)/9)
pred = t(pred)
target_df <- target[-trainIndex,]
MulLogLoss(target_df,pred)
