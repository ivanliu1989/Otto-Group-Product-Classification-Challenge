install.packages("Rweibo", repos = "http://R-Forge.R-project.org")
require(Rweibo)
install.packages("Rweibo", repos = "http://R-Forge.R-project.org")
require(Rweibo)
install.packages("devtools")
require(devtools)
install_github("rCharts", "ramnathv")
install_github("rCharts", "ramnathv")
require(devtools)
require(rCharts)
require(devTools)
install.packages("devTools")
install.packages("devtools")
require(devtools)
devtools::install_github('rstudio/shinyapps')
install.packages("Rtools")
install.packages("Googlevis")
install.packages("GoogleVis")
install.packages("googleVis")
install.packages('devtools')
devtools::install_github('rstudio/shinyapps')
install.packages("devtools")
devtools::install_github('rstudio/shinyapps')
library(shinyapps)
require(devtools)
install_github('rCharts', 'ramnathv')
install.packages("googleVis")
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
library(shinyapps)
install.packages(c('ggplot2', 'shiny'))
install.packages('rJava', .libPaths()[1], 'http://www.rforge.net/')
install.packages('rJava',,'http://www.rforge.net/')
install.packages('rJava')
install.packages('rJava', repos='http://www.rforge.net/')
require(tm); require(SnowballC); require(data.table); library(RWeka)
R.Version()
install.packages('rJava', repos='http://www.rforge.net/')
install.packages('rJava')
require(tm); require(SnowballC); require(data.table); library(RWeka)
.libPaths()[1]
.libPaths()[2]
.libPaths()
install.packages('rJava', .libPaths()[1], 'http://www.rforge.net/')
install.packages('rJava')
require(tm); require(SnowballC); require(data.table); library(RWeka)
Sys.getenv("JAVA_HOME")
if (Sys.getenv("JAVA_HOME")!="")
Sys.setenv(JAVA_HOME="")
library(rJava)
set JAVA_HOME="C:\Program Files\Java\jre7\"
Sys.setenv(JAVA_HOME="C:\\Program Files\\Java\\jre7\\")
options(java.home="C:\\Program Files\\Java\\jre7\\")
library(rJava)
require(tm); require(SnowballC); require(data.table); library("RWeka")
gc()
gc()
driver <-1
trip <- 1
files <- paste0(path, driver, '/', trip, ".csv")
path <- "data/drivers/"
files <- paste0(path, driver, '/', trip, ".csv")
trip_data1 <- data.matrix(fread(files, header=T, sep="," ,stringsAsFactor=F))
require(caret);require(data.table)
trip_data1 <- data.matrix(fread(files, header=T, sep="," ,stringsAsFactor=F))
files
fread(files, header=T, sep="," ,stringsAsFactor=F)
setwd('H:/Machine_Learning/Otto-Group-Product-Classification-Challenge')
rm(list=ls());gc()
require(data.table)
ensem_prob <- matrix(0, nrow = 144368, ncol = 10, dimnames = list(NULL, NULL))
datadirectory <- '../otto-result' # 'results/best'
files <- list.files(datadirectory,full.names = T)
files
for (file in files){
result <- data.frame(fread(file,header = T, stringsAsFactor = F))
for (i in 1:10){
for (j in 1:nrow(ensem_prob)){
ensem_prob[j,i] <- max(result[j,i],ensem_prob[j,i])
}
}
}
ensem_prob = format(ensem_prob, digits=2,scientific=F) # shrink the size of submission
ensem_prob = data.frame(1:nrow(ensem_prob),ensem_prob[,-1])
names(ensem_prob) = c('id', paste0('Class_',1:9))
head(ensem_prob)
write.csv(ensem_prob,file='../ensemble_nnet.csv', quote=FALSE,row.names=FALSE)
setwd('H:/Machine_Learning/Otto-Group-Product-Classification-Challenge')
rm(list=ls());gc()
require(caret)
load(file='data/raw_data_multi.RData')
boxplot(feat_1~target, data=train)
boxplot(log(feat_1)~target, data=train)
log(feat_1)
log(train$feat_1)
train$feat_1
boxplot(feat_1~target, data=train)
boxplot(feat_2~target, data=train)
boxplot(feat_3~target, data=train)
boxplot(feat_4~target, data=train)
boxplot(feat_1~target, data=train)
boxplot(feat_2~target, data=train)
boxplot(feat_3~target, data=train)
boxplot(feat_4~target, data=train)
boxplot(feat_4~target, data=train)
boxplot(feat_3~target, data=train)
boxplot(feat_1~target, data=train)
boxplot(feat_2~target, data=train)
boxplot(feat_3~target, data=train)
boxplot(feat_4~target, data=train)
boxplot(feat_5~target, data=train)
boxplot(feat_6~target, data=train)
boxplot(feat_7~target, data=train)
boxplot(feat_8~target, data=train)
boxplot(feat_9~target, data=train)
boxplot(feat_10~target, data=train)
boxplot(feat_11~target, data=train)
boxplot(feat_12~target, data=train)
boxplot(feat_13~target, data=train)
boxplot(feat_14~target, data=train)
plot(train$feat_1)
boxplot(feat_1~target, data=train, notch=TRUE)
boxplot(feat_1~target, data=train, notch=F)
log1
log(1)
log(0)
head(train)
train[,96] <- train$target
train[,95] <- apply(train[,2:94],1,function(x) length(which(x==0)))
names(train) <- c('id',paste0('feat_',1:93),'sumNonZero','target')
boxplot(sumNonZero~target, data=train)
train$extra <- apply(train[,2:94],1,function(x) sum)
boxplot(extra~target, data=train)
head(train)
train$extra <- apply(train[,2:94],1,sum)
boxplot(extra~target, data=train)
kmeans(train[,2:94])
kmeans(train[,2:94], centers=9)
train$extra <- kmeans(train[,2:94], centers=9)
head(train)
train$extra <- kmeans(train[,2:94], centers=9,iter.max = 10000,nstart = 9)
group <- kmeans(train[,2:94], centers=9,iter.max = 10000,nstart = 9)
dim(group)
length(group)
group
group <- kmeans(train[,2:94], centers=9,iter.max = 1000000,nstart = 27)
group
rm(list=ls());gc()
require(data.table)
all_result <- list()
j=1
for (file in files){
all_result[[j]] <- data.matrix(fread(file,stringsAsFactors = F))
j <- j + 1
}
datadirectory <- '../otto-result' # 'results/best'
files <- list.files(datadirectory,full.names = T)
all_result <- list()
j=1
for (file in files){
all_result[[j]] <- data.matrix(fread(file,stringsAsFactors = F))
j <- j + 1
}
files
pred_ensemble <- matrix(0, nrow = 144368, ncol = 9, dimnames = list(NULL, NULL))
for (i in 1:9){
for (j in 1:nrow(pred_ensemble)){
pred_ensemble[j,i] <- mean(all_result[[1]][j,i],all_result[[2]][j,i],all_result[[3]][j,i],all_result[[4]][j,i],all_result[[5]][j,i])
}
}
pred_ensemble = format(pred_ensemble, digits=2,scientific=F) # shrink the size of submission
pred_ensemble = data.frame(1:nrow(pred_ensemble),pred_ensemble)
names(pred_ensemble) = c('id', paste0('Class_',1:9))
write.csv(pred_ensemble,file=paste0('../submission_sum_53.csv'), quote=FALSE,row.names=FALSE)
dim(pred_ensemble)
head(pred_ensemble)
ensem_prob <- matrix(0, nrow = 144368, ncol = 10, dimnames = list(NULL, NULL))
datadirectory <- '../otto-result' # 'results/best'
files <- list.files(datadirectory,full.names = T)
for (file in files){
result <- data.frame(fread(file,header = T, stringsAsFactor = F))
for (i in 1:10){
for (j in 1:nrow(ensem_prob)){
ensem_prob[j,i] <- max(result[j,i],ensem_prob[j,i])
}
}
}
ensem_prob = format(ensem_prob, digits=2,scientific=F) # shrink the size of submission
ensem_prob = data.frame(1:nrow(ensem_prob),ensem_prob[,-1])
names(ensem_prob) = c('id', paste0('Class_',1:9))
head(ensem_prob)
rm(list=ls());gc()
require(data.table)
datadirectory <- '../otto-result' # 'results/best'
files <- list.files(datadirectory,full.names = T)
all_result <- list()
j=1
for (file in files){
all_result[[j]] <- data.matrix(fread(file,stringsAsFactors = F))
j <- j + 1
}
pred_ensemble <- matrix(0, nrow = 144368, ncol = 9, dimnames = list(NULL, NULL))
for (i in 2:10){
for (j in 1:nrow(pred_ensemble)){
pred_ensemble[j,i] <- sum(all_result[[1]][j,i],all_result[[2]][j,i],all_result[[3]][j,i],all_result[[4]][j,i],all_result[[5]][j,i])
}
}
pred_ensemble = format(pred_ensemble, digits=2,scientific=F) # shrink the size of submission
pred_ensemble = data.frame(1:nrow(pred_ensemble),pred_ensemble)
names(pred_ensemble) = c('id', paste0('Class_',1:9))
pred_ensemble <- matrix(0, nrow = 144368, ncol = 9, dimnames = list(NULL, NULL))
pred_ensemble <- matrix(0, nrow = 144368, ncol = 9, dimnames = list(NULL, NULL))
for (i in 2:10){
for (j in 1:nrow(pred_ensemble)){
pred_ensemble[j,(i-1)] <- sum(all_result[[1]][j,i],all_result[[2]][j,i],all_result[[3]][j,i],all_result[[4]][j,i],all_result[[5]][j,i])
}
}
pred_ensemble = format(pred_ensemble, digits=2,scientific=F) # shrink the size of submission
pred_ensemble = data.frame(1:nrow(pred_ensemble),pred_ensemble)
names(pred_ensemble) = c('id', paste0('Class_',1:9))
pred_ensemble <- matrix(0, nrow = 144368, ncol = 9, dimnames = list(NULL, NULL))
for (i in 2:10){
for (j in 1:nrow(pred_ensemble)){
pred_ensemble[j,(i-1)] <- mean(all_result[[1]][j,i],all_result[[2]][j,i],all_result[[3]][j,i],all_result[[4]][j,i],all_result[[5]][j,i])
}
}
pred_ensemble = format(pred_ensemble, digits=2,scientific=F) # shrink the size of submission
pred_ensemble = data.frame(1:nrow(pred_ensemble),pred_ensemble)
names(pred_ensemble) = c('id', paste0('Class_',1:9))
write.csv(pred_ensemble,file=paste0('../submission_sum_53.csv'), quote=FALSE,row.names=FALSE)
head(pred_ensemble)
