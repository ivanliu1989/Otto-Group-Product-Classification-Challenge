install.packages("Rweibo", repos = "http://R-Forge.R-project.org")
require(Rweibo)
install.packages("Rweibo", repos = "http://R-Forge.R-project.org")
require(Rweibo)
install.packages("devtools")
require(devtools)
install_github("rCharts", "ramnathv")
install_github("rCharts", "ramnathv")
require(devtools)
require(rCharts)
require(devTools)
install.packages("devTools")
install.packages("devtools")
require(devtools)
devtools::install_github('rstudio/shinyapps')
install.packages("Rtools")
install.packages("Googlevis")
install.packages("GoogleVis")
install.packages("googleVis")
install.packages('devtools')
devtools::install_github('rstudio/shinyapps')
install.packages("devtools")
devtools::install_github('rstudio/shinyapps')
library(shinyapps)
require(devtools)
install_github('rCharts', 'ramnathv')
install.packages("googleVis")
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
library(shinyapps)
install.packages(c('ggplot2', 'shiny'))
install.packages('rJava', .libPaths()[1], 'http://www.rforge.net/')
install.packages('rJava',,'http://www.rforge.net/')
install.packages('rJava')
install.packages('rJava', repos='http://www.rforge.net/')
require(tm); require(SnowballC); require(data.table); library(RWeka)
R.Version()
install.packages('rJava', repos='http://www.rforge.net/')
install.packages('rJava')
require(tm); require(SnowballC); require(data.table); library(RWeka)
.libPaths()[1]
.libPaths()[2]
.libPaths()
install.packages('rJava', .libPaths()[1], 'http://www.rforge.net/')
install.packages('rJava')
require(tm); require(SnowballC); require(data.table); library(RWeka)
Sys.getenv("JAVA_HOME")
if (Sys.getenv("JAVA_HOME")!="")
Sys.setenv(JAVA_HOME="")
library(rJava)
set JAVA_HOME="C:\Program Files\Java\jre7\"
Sys.setenv(JAVA_HOME="C:\\Program Files\\Java\\jre7\\")
options(java.home="C:\\Program Files\\Java\\jre7\\")
library(rJava)
require(tm); require(SnowballC); require(data.table); library("RWeka")
gc()
gc()
driver <-1
trip <- 1
files <- paste0(path, driver, '/', trip, ".csv")
path <- "data/drivers/"
files <- paste0(path, driver, '/', trip, ".csv")
trip_data1 <- data.matrix(fread(files, header=T, sep="," ,stringsAsFactor=F))
require(caret);require(data.table)
trip_data1 <- data.matrix(fread(files, header=T, sep="," ,stringsAsFactor=F))
files
fread(files, header=T, sep="," ,stringsAsFactor=F)
setwd('H:/Machine_Learning/Otto-Group-Product-Classification-Challenge')
rm(list=ls());gc()
library(h2o);library(caret)
source('main_R/2_logloss_func.R')
load(file='data/target.RData')
load(file='data/raw_data_newFeat.RData') # raw_data_log_scale.RData
localH2O <- h2o.init(ip = 'localhost', port = 54321, max_mem_size = '8g')
# h2o.clusterInfo(localH2O)
# h2o.rm(object= localH2O, keys= "DeepLearning_aa8d890913a2ad4d5f677dcad33849d2_xval2_holdout")
# h2o.ls(localH2O)
train <- data.frame(train)
trainIndex <- createDataPartition(train$target, p = .7,list = FALSE)
train_df <- train[trainIndex,];test_df  <- train[-trainIndex,]
train_df <- as.h2o(localH2O, train_df, key="train")
test_df <- as.h2o(localH2O, test_df, key="test")
independent <- colnames(train_df[,2:(ncol(train_df)-1)])
dependent <- "target"
fit <- h2o.randomForest(y = dependent, x = independent, data = train_df, type = "BigData",
classification=T, ntree=5000, depth=30, mtries=30,
sample.rate=0.8, nbins = 30, seed=8,verbose=T)
